{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vikra\\\\OneDrive\\\\Desktop\\\\AWS\\\\Kubertnetes\\\\ADM\\\\intelli-assignment\\\\frontend\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { loginSchema } from '../schemas/loginSchema';\nimport { Input } from './ui/Input';\nimport { Button } from './ui/Button';\nimport { useLogin } from '../hooks/useLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const {\n    mutate,\n    isPending,\n    error\n  } = useLogin();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: zodResolver(loginSchema)\n  });\n  const onSubmit = data => {\n    mutate(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Email\",\n      registration: register('email'),\n      error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"Password\",\n      registration: register('password'),\n      error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: isPending,\n      children: isPending ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"2UVragQKu59aN1/5UdIeZ9rh130=\", false, function () {\n  return [useLogin, useForm];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useForm","zodResolver","loginSchema","Input","Button","useLogin","jsxDEV","_jsxDEV","LoginForm","_s","_errors$email","_errors$password","mutate","isPending","error","register","handleSubmit","formState","errors","resolver","onSubmit","data","children","fileName","_jsxFileName","lineNumber","columnNumber","label","registration","email","message","type","password","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Vikra/OneDrive/Desktop/AWS/Kubertnetes/ADM/intelli-assignment/frontend/src/components/LoginForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { loginSchema } from '../schemas/loginSchema';\r\nimport { z } from 'zod';\r\nimport { Input } from './ui/Input';\r\nimport { Button } from './ui/Button';\r\nimport { useLogin } from '../hooks/useLogin';\r\n\r\nexport const LoginForm = () => {\r\n  const { mutate, isPending, error } = useLogin();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<z.infer<typeof loginSchema>>({\r\n    resolver: zodResolver(loginSchema),\r\n  });\r\n\r\n  const onSubmit = (data: z.infer<typeof loginSchema>) => {\r\n    mutate(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h2 >Login</h2>\r\n      <Input label=\"Email\" registration={register('email')} error={errors.email?.message} type=\"email\" />\r\n      <Input label=\"Password\" registration={register('password')} error={errors.password?.message} type=\"password\" />\r\n      {error && <p >{error.message}</p>}\r\n      <Button type=\"submit\" disabled={isPending}>{isPending ? 'Logging in...' : 'Login'}</Button>\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,gBAAA;EAC7B,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE/C,MAAM;IACJU,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGlB,OAAO,CAA8B;IACvCmB,QAAQ,EAAElB,WAAW,CAACC,WAAW;EACnC,CAAC,CAAC;EAEF,MAAMkB,QAAQ,GAAIC,IAAiC,IAAK;IACtDT,MAAM,CAACS,IAAI,CAAC;EACd,CAAC;EAED,oBACEd,OAAA;IAAMa,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAAAE,QAAA,gBACrCf,OAAA;MAAAe,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfnB,OAAA,CAACJ,KAAK;MAACwB,KAAK,EAAC,OAAO;MAACC,YAAY,EAAEb,QAAQ,CAAC,OAAO,CAAE;MAACD,KAAK,GAAAJ,aAAA,GAAEQ,MAAM,CAACW,KAAK,cAAAnB,aAAA,uBAAZA,aAAA,CAAcoB,OAAQ;MAACC,IAAI,EAAC;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnGnB,OAAA,CAACJ,KAAK;MAACwB,KAAK,EAAC,UAAU;MAACC,YAAY,EAAEb,QAAQ,CAAC,UAAU,CAAE;MAACD,KAAK,GAAAH,gBAAA,GAAEO,MAAM,CAACc,QAAQ,cAAArB,gBAAA,uBAAfA,gBAAA,CAAiBmB,OAAQ;MAACC,IAAI,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9GZ,KAAK,iBAAIP,OAAA;MAAAe,QAAA,EAAKR,KAAK,CAACgB;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCnB,OAAA,CAACH,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAACE,QAAQ,EAAEpB,SAAU;MAAAS,QAAA,EAAET,SAAS,GAAG,eAAe,GAAG;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEX,CAAC;AAACjB,EAAA,CAxBWD,SAAS;EAAA,QACiBH,QAAQ,EAMzCL,OAAO;AAAA;AAAAkC,EAAA,GAPA1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}