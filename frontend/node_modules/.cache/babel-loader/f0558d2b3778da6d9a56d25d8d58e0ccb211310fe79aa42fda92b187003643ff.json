{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from '@tanstack/react-query';\nimport { login } from '../api/auth';\nexport const useLogin = () => {\n  _s();\n  const {\n    mutate,\n    isPending,\n    error\n  } = useMutation(login, {\n    onError: err => {\n      // Handle error if needed\n      console.error('Login error:', err.message);\n    }\n  });\n};\n_s(useLogin, \"97d4QFvUhVFBsw4jCaXTWH6XJMo=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","login","useLogin","_s","mutate","isPending","error","onError","err","console","message"],"sources":["C:/Users/Vikra/OneDrive/Desktop/AWS/Kubertnetes/ADM/intelli-assignment/frontend/src/hooks/useLogin.ts"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\r\nimport { login } from '../api/auth';\r\nimport { LoginRequest, LoginResponse } from '../types/auth';\r\n\r\nexport const useLogin = () => {\r\n  const { mutate, isPending, error } = useMutation<LoginResponse, Error, LoginRequest>(login, {\r\n    onError: (err: Error) => {\r\n      // Handle error if needed\r\n      console.error('Login error:', err.message);\r\n    },\r\n  });\r\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,KAAK,QAAQ,aAAa;AAGnC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGN,WAAW,CAAqCC,KAAK,EAAE;IAC1FM,OAAO,EAAGC,GAAU,IAAK;MACvB;MACAC,OAAO,CAACH,KAAK,CAAC,cAAc,EAAEE,GAAG,CAACE,OAAO,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAAAP,EAAA,CAPYD,QAAQ;EAAA,QACkBF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}