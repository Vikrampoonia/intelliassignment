{"ast":null,"code":"export async function loginUser(data) {\n  try {\n    const response = await fetch('https://api.example.com/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw {\n        message: errorData.message || 'Login failed',\n        statusCode: response.status\n      };\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.statusCode) {\n      throw error;\n    }\n    throw {\n      message: 'Network error. Please try again later.',\n      statusCode: 500\n    };\n  }\n}","map":{"version":3,"names":["loginUser","data","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","statusCode","status","error"],"sources":["C:/Users/Vikra/OneDrive/Desktop/AWS/Kubertnetes/ADM/intelli-assignment/src/api/authApi.ts"],"sourcesContent":["import { LoginFormData, LoginResponse, ApiError } from '../types/auth';\r\n\r\nexport async function loginUser(data: LoginFormData): Promise<LoginResponse> {\r\n  try {\r\n    const response = await fetch('https://api.example.com/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw {\r\n        message: errorData.message || 'Login failed',\r\n        statusCode: response.status,\r\n      } as ApiError;\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    if ((error as ApiError).statusCode) {\r\n      throw error;\r\n    }\r\n    throw { message: 'Network error. Please try again later.', statusCode: 500 } as ApiError;\r\n  }\r\n}"],"mappings":"AAEA,OAAO,eAAeA,SAASA,CAACC,IAAmB,EAA0B;EAC3E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM;QACJC,OAAO,EAAEF,SAAS,CAACE,OAAO,IAAI,cAAc;QAC5CC,UAAU,EAAEX,QAAQ,CAACY;MACvB,CAAC;IACH;IAEA,OAAO,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,IAAKA,KAAK,CAAcF,UAAU,EAAE;MAClC,MAAME,KAAK;IACb;IACA,MAAM;MAAEH,OAAO,EAAE,wCAAwC;MAAEC,UAAU,EAAE;IAAI,CAAC;EAC9E;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}